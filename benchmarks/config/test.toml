[sim]
physics = "pyb"
camera_view = [5.0, -40.0, -40.0, 0.5, -1.0, 0.5]
sim_freq = 500                                    # Simulation frequency, in Hz
ctrl_freq = 500                                   # Controller frequency, in Hz. This frequency is used to simulate the onboard controller, NOT for the environment's step function
gui = false                                       # Enable/disable PyBullet's GUI

[sim.disturbances.action]
type = "GaussianNoise"
std = 0.001

[sim.disturbances.dynamics]
type = "UniformNoise"
low = [-0.1, -0.1, -0.1]
high = [0.1, 0.1, 0.1]

[env]
reseed = false   # Whether to re-seed the random number generator between episodes
seed = 1337      # Random seed
freq = 60        # Frequency of the environment's step function, in Hz
symbolic = false # Whether to include symbolic expressions in the info dict. Note: This can interfere with multiprocessing! If you want to parallelize your training, set this to false.

[env.track]
# Tall gates: 1.0m height. Short gates: 0.525m height. Height is measured from the ground to the
# center of the gate.
[[env.track.gates]]
pos = [0.45, -1.0, 0.525]
rpy = [0.0, 0.0, 2.35]
[[env.track.gates]]
pos = [1.0, -1.55, 1.0]
rpy = [0.0, 0.0, -0.78]
[[env.track.gates]]
pos = [0.0, 0.5, 0.525]
rpy = [0.0, 0.0, 0.0]
[[env.track.gates]]
pos = [-0.5, -0.5, 1.0]
rpy = [0.0, 0.0, 3.14]

# Obstacle height: 1.05m. Height is measured from the ground to the top of the obstacle.
[[env.track.obstacles]]
pos = [1.0, -0.5, 1.05]
[[env.track.obstacles]]
pos = [0.5, -1.5, 1.05]
[[env.track.obstacles]]
pos = [-0.5, 0.0, 1.05]
[[env.track.obstacles]]
pos = [0.0, 1.0, 1.05]

[env.track.drone]
pos = [1.0, 1.0, 0.05]
rpy = [0, 0, 0]
vel = [0, 0, 0]
ang_vel = [0, 0, 0]

[env.randomization.drone_pos]
type = "uniform" # Everything that can be used as a distribution in numpy.random
# Kwargs that are permissable in the np random function
low = [-0.1, -0.1, 0.0]
high = [0.1, 0.1, 0.02]

[env.randomization.drone_rpy]
type = "uniform"
low = [-0.1, -0.1, -0.1]
high = [0.1, 0.1, 0.1]

[env.randomization.drone_mass]
type = "uniform"
low = -0.01
high = 0.01

[env.randomization.drone_inertia]
type = "uniform"
low = [-0.000001, -0.000001, -0.000001]
high = [0.000001, 0.000001, 0.000001]

[env.randomization.gate_pos]
type = "uniform"
low = [-0.1, -0.1, 0.0]
high = [0.1, 0.1, 0.0]

[env.randomization.gate_rpy]
type = "uniform"
low = [0.0, 0.0, -0.1]
high = [0.0, 0.0, 0.1]

[env.randomization.obstacle_pos]
type = "uniform"
low = [-0.1, -0.1, 0.0]
high = [0.1, 0.1, 0.0]

[[env.constraints]]
type = "DefaultConstraint"
ctype = "input"
[[env.constraints]]
type = "BoundedConstraint"
ctype = "state"
active_dims = [0, 2, 4]
upper_bounds = [3, 3, 2]
lower_bounds = [-3.0, -3.0, -0.1]
